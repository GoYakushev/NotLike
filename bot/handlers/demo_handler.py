from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from services.demo.demo_service import DemoService

class DemoStates(StatesGroup):
    choosing_token = State()
    entering_amount = State()
    confirming_order = State()

demo_service = DemoService()

async def show_demo_menu(message: types.Message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        types.InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º", callback_data="toggle_demo"),
        types.InlineKeyboardButton("üí∞ –î–µ–º–æ-–±–∞–ª–∞–Ω—Å", callback_data="demo_balance")
    )
    keyboard.add(
        types.InlineKeyboardButton("üìä –ú–æ–∏ –¥–µ–º–æ-–æ—Ä–¥–µ—Ä–∞", callback_data="demo_orders"),
        types.InlineKeyboardButton("üìà –¢–æ—Ä–≥–æ–≤–∞—Ç—å", callback_data="demo_trade")
    )
    
    await message.answer(
        "üéÆ –î–µ–º–æ-—Ç–æ—Ä–≥–æ–≤–ª—è\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        "‚Ä¢ –¢–æ—Ä–≥–æ–≤–∞—Ç—å –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã\n"
        "‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏\n"
        "‚Ä¢ –£—á–∏—Ç—å—Å—è –±–µ–∑ —Ä–∏—Å–∫–∞",
        reply_markup=keyboard
    )

async def toggle_demo_mode(callback_query: types.CallbackQuery):
    result = await demo_service.toggle_demo_mode(callback_query.from_user.id)
    
    if result['success']:
        mode = "–≤–∫–ª—é—á–µ–Ω ‚úÖ" if result['demo_mode'] else "–≤—ã–∫–ª—é—á–µ–Ω ‚ùå"
        await callback_query.message.answer(
            f"üîÑ –î–µ–º–æ-—Ä–µ–∂–∏–º {mode}\n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å: ${result['balance']:,.2f}"
        )
    else:
        await callback_query.message.answer(
            f"‚ùå –û—à–∏–±–∫–∞: {result['error']}"
        ) 