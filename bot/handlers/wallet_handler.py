async def show_wallet(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—à–µ–ª—å–∫–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        balances = await wallet_service.get_balances(message.from_user.id)

        text = "üíº –í–∞—à–∏ –∫–æ—à–µ–ª—å–∫–∏:\n\n"
        for token_symbol, balance in balances.items():
            text += f"{token_symbol}: {balance:.4f}\n"

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton("üì• –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="deposit"),
            types.InlineKeyboardButton("üì§ –í—ã–≤–µ—Å—Ç–∏", callback_data="withdraw")
        )
        keyboard.add(
            types.InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh_balance"),
            types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        )

        await message.answer(text, reply_markup=keyboard)
    except Exception as e:
        await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—à–µ–ª—å–∫–∞—Ö: {e}") 