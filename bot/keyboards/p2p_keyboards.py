from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from core.database.models import P2PPaymentMethod
from typing import List
from services.p2p.p2p_service import P2PService  #  P2PService

def p2p_menu_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é P2P."""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = [
        KeyboardButton("–°–æ–∑–¥–∞—Ç—å P2P –æ—Ä–¥–µ—Ä"),
        KeyboardButton("–°–ø–∏—Å–æ–∫ P2P –æ—Ä–¥–µ—Ä–æ–≤"),
        KeyboardButton("–ú–æ–∏ P2P –æ—Ä–¥–µ—Ä–∞"),
        KeyboardButton("–ù–∞–∑–∞–¥")  #  –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    ]
    keyboard.add(*buttons)
    return keyboard

def p2p_side_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–æ—Ä–æ–Ω—ã (BUY/SELL)."""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = [
        KeyboardButton("BUY"),
        KeyboardButton("SELL"),
        KeyboardButton("–ù–∞–∑–∞–¥") #  –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    ]
    keyboard.add(*buttons)
    return keyboard

async def p2p_payment_method_keyboard(p2p_service: P2PService) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã."""
    session = p2p_service.db.get_session()
    payment_methods: List[P2PPaymentMethod] = session.query(P2PPaymentMethod).all()
    keyboard = InlineKeyboardMarkup(row_width=2)
    for method in payment_methods:
        keyboard.add(
            InlineKeyboardButton(method.name, callback_data=f"p2p_paymentmethod_{method.id}")
        )
    session.close()
    return keyboard

def confirm_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = [
        KeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"),
        KeyboardButton("–ù–∞–∑–∞–¥")
    ]
    keyboard.add(*buttons)
    return keyboard

def back_to_p2p_menu_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("–ù–∞–∑–∞–¥ –≤ P2P –º–µ–Ω—é"))
    return keyboard

def p2p_order_keyboard(order_id: int, is_owner: bool = False):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ P2P –æ—Ä–¥–µ—Ä–∞.

    :param order_id: ID –æ—Ä–¥–µ—Ä–∞.
    :param is_owner: –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –æ—Ä–¥–µ—Ä–∞.
    :return: InlineKeyboardMarkup.
    """
    keyboard = InlineKeyboardMarkup(row_width=1)
    buttons = []

    if is_owner:
        buttons.append(InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ä–¥–µ—Ä", callback_data=f"p2p_cancel_{order_id}"))
        buttons.append(InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã", callback_data=f"p2p_confirm_payment_{order_id}"))
    else:
        buttons.append(InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç—å –æ—Ä–¥–µ—Ä", callback_data=f"p2p_take_{order_id}"))

    buttons.append(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="p2p_back_to_list")) #  –∫ —Å–ø–∏—Å–∫—É
    keyboard.add(*buttons)
    return keyboard

def confirm_payment_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã."""
    keyboard = InlineKeyboardMarkup(row_width=1)
    confirm_button = InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã", callback_data="confirm_payment")
    keyboard.add(confirm_button)

def dispute_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –¥–∏—Å–ø—É—Ç–∞ (–¥–ª—è –∞–¥–º–∏–Ω–∞)."""
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é", callback_data=f"p2p_dispute_decision_refund_{order_id}"),
        InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤ –ø–æ–ª—å–∑—É –ø—Ä–æ–¥–∞–≤—Ü–∞", callback_data=f"p2p_dispute_decision_complete_{order_id}")
    )
    return keyboard

def leave_review_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞."""
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("üëç", callback_data=f"p2p_leave_review_positive_{order_id}"),
        InlineKeyboardButton("üëé", callback_data=f"p2p_leave_review_negative_{order_id}"),
        InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"p2p_leave_review_skip_{order_id}")
    )
    return keyboard

def p2p_filters_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ P2P."""
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("–ë–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞", callback_data="p2p_filter_base"),
        InlineKeyboardButton("–ö–æ—Ç–∏—Ä—É–µ–º–∞—è –≤–∞–ª—é—Ç–∞", callback_data="p2p_filter_quote")
    )
    keyboard.add(
        InlineKeyboardButton("–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", callback_data="p2p_filter_payment"),
        InlineKeyboardButton("–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", callback_data="p2p_filter_reset")
    )
    keyboard.add(InlineKeyboardButton("–ü—Ä–∏–º–µ–Ω–∏—Ç—å", callback_data="p2p_filter_apply"))
    return keyboard 