from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from services.swap.swap_service import SwapService

class SwapStates(StatesGroup):
    choosing_from = State()
    choosing_to = State()
    entering_amount = State()

swap_service = SwapService()

async def show_swap_menu(message: types.Message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        types.InlineKeyboardButton("SOL ‚ÜîÔ∏è TON", callback_data="swap_sol_ton"),
        types.InlineKeyboardButton("TON ‚ÜîÔ∏è SOL", callback_data="swap_ton_sol")
    )
    keyboard.add(
        types.InlineKeyboardButton("üìä –ò—Å—Ç–æ—Ä–∏—è —Å–≤–æ–ø–æ–≤", callback_data="swap_history")
    )
    
    await message.answer(
        "üîÑ –°–≤–æ–ø—ã\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã —á–µ—Ä–µ–∑ SimpleSwap.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–º–µ–Ω–∞:",
        reply_markup=keyboard
    )

async def start_swap(callback_query: types.CallbackQuery, state: FSMContext):
    currencies = callback_query.data.split('_')[1:]
    await state.update_data(from_currency=currencies[0], to_currency=currencies[1])
    
    await callback_query.message.answer(
        f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É {currencies[0]} –¥–ª—è –æ–±–º–µ–Ω–∞:"
    )
    await SwapStates.entering_amount.set()

async def process_swap_amount(message: types.Message, state: FSMContext):
    try:
        amount = float(message.text)
        data = await state.get_data()
        
        # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –æ–±–º–µ–Ω–∞
        rate = await swap_service.get_rate(
            data['from_currency'],
            data['to_currency'],
            amount
        )
        
        if not rate['success']:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –æ–±–º–µ–Ω–∞")
            return
            
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_swap_{amount}"),
            types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_swap")
        )
        
        await message.answer(
            f"üìä –î–µ—Ç–∞–ª–∏ –æ–±–º–µ–Ω–∞:\n\n"
            f"–û—Ç: {amount} {data['from_currency']}\n"
            f"–ö: {rate['estimated']} {data['to_currency']}\n"
            f"–ö—É—Ä—Å: 1 {data['from_currency']} = {rate['rate']} {data['to_currency']}\n\n"
            f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–±–º–µ–Ω:",
            reply_markup=keyboard
        )
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ") 